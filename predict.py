import tensorflow as tf
import os
import numpy as np

# Provide the path to the directory where the model is saved
model_path = os.curdir + "/asl_model.keras"

# Load the saved model
loaded_model = tf.keras.models.load_model(model_path)

p_this = np.array([[0.7226986885070801,0.36437976360321045,2.57821596960639e-07,0.7062830924987793,0.4784858822822571,-0.2497711479663849,0.6335207223892212,0.5845485925674438,-0.37407171726226807,0.562483012676239,0.6921905279159546,-0.4324411451816559,0.46420589089393616,0.7884669899940491,-0.4783989191055298,0.4253016710281372,0.35754114389419556,-0.3762879967689514,0.24180330336093903,0.46135157346725464,-0.44334694743156433,0.13500076532363892,0.5688252449035645,-0.4623773694038391,0.07371410727500916,0.6524938344955444,-0.46291565895080566,0.39854615926742554,0.33010756969451904,-0.22982490062713623,0.2156103253364563,0.4263143241405487,-0.27023816108703613,0.2870181202888489,0.512467086315155,-0.24088166654109955,0.36948180198669434,0.5383990406990051,-0.21124158799648285,0.37978625297546387,0.3338853716850281,-0.08815180510282516,0.22248423099517822,0.4143243730068207,-0.12758535146713257,0.296550989151001,0.4825672209262848,-0.12015511840581894,0.3678557276725769,0.5024763345718384,-0.10756755620241165,0.3582914173603058,0.3469347059726715,0.04121062904596329,0.25241413712501526,0.41686639189720154,0.01758064143359661,0.2833367586135864,0.4780322015285492,0.015995625406503677,0.33280080556869507,0.502910315990448,0.017939848825335503], [0.37377113103866577,1.03873872756958,1.1772433339274357e-07,0.47782570123672485,0.9120838642120361,0.04783768951892853,0.5320541858673096,0.7814186215400696,0.04443781077861786,0.583692193031311,0.6811703443527222,0.01613624580204487,0.6103090047836304,0.5778310298919678,-0.009487290866672993,0.21353666484355927,0.6672191619873047,0.09323601424694061,0.32933181524276733,0.5059829354286194,0.0537111759185791,0.45509546995162964,0.4887709617614746,0.007515749894082546,0.5497593283653259,0.5222805142402649,-0.013907765038311481,0.1778985559940338,0.6630764007568359,0.04173232614994049,0.32006579637527466,0.47341862320899963,0.012743940576910973,0.46391114592552185,0.4665905833244324,-0.02444927580654621,0.5656299591064453,0.5142021179199219,-0.04330412298440933,0.1860639452934265,0.6670621633529663,-0.01303569320589304,0.3178243935108185,0.4658343195915222,-0.046585071831941605,0.46210378408432007,0.4642986059188843,-0.061325009912252426,0.5577360987663269,0.5171844959259033,-0.05870324373245239,0.2316320687532425,0.6749870181083679,-0.06493867933750153,0.31903818249702454,0.4920273423194885,-0.08083831518888474,0.42703482508659363,0.46939462423324585,-0.07053855061531067,0.5108804702758789,0.4994226396083832,-0.05392790585756302], [0.2649063467979431,0.9196863174438477,9.58653686211619e-07,0.31727635860443115,0.8434406518936157,-0.029002796858549118,0.3324964642524719,0.7568067908287048,-0.044306326657533646,0.26151755452156067,0.7255218029022217,-0.06127505749464035,0.1943567991256714,0.7300520539283752,-0.0779518187046051,0.2738801836967468,0.6906023621559143,-0.020999817177653313,0.2914104461669922,0.5948241949081421,-0.050579167902469635,0.29562240839004517,0.5370152592658997,-0.07001065462827682,0.29779863357543945,0.4860886335372925,-0.08078126609325409,0.21764546632766724,0.7059547901153564,-0.03004145808517933,0.19346529245376587,0.5973615646362305,-0.0647197738289833,0.1791335791349411,0.5287910103797913,-0.08678553998470306,0.1633058786392212,0.4702443480491638,-0.09662649035453796,0.17291104793548584,0.7424964308738708,-0.04206950590014458,0.17277996242046356,0.6884733438491821,-0.09876132011413574,0.2122778296470642,0.7381698489189148,-0.10545869916677475,0.23068296909332275,0.7819704413414001,-0.09156835079193115,0.1357843279838562,0.7929825782775879,-0.05476805567741394,0.1452634334564209,0.7427881956100464,-0.09748363494873047,0.18522489070892334,0.7789644002914429,-0.0881061777472496,0.20672690868377686,0.8204478025436401,-0.06889089941978455]]).reshape(3, 63)
#p_this.reshape(1, 63)

# This predicts some random values I plucked out of the Q O and N's csvs
prediction = loaded_model.predict(p_this)
for result in prediction:
    index = np.argmax(result)

    print(index)
    print(chr(index+65))